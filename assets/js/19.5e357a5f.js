(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{595:function(s,n,a){"use strict";a.r(n);var e=a(1),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"spring-cloud-微服务构建-（二）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-微服务构建-（二）"}},[s._v("#")]),s._v(" Spring Cloud 微服务构建 （二）")]),s._v(" "),a("h2",{attrs:{id:"路由网关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由网关"}},[s._v("#")]),s._v(" 路由网关")]),s._v(" "),a("h3",{attrs:{id:"zuul"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zuul"}},[s._v("#")]),s._v(" - Zuul")]),s._v(" "),a("p",[s._v("路由是微服务体系结构的一个组成部分。例如 / 可以映射到您的Web应用程序，/api/users映射到用户服务，/api/shop映射到商店服务。Zuul是Netflix的基于JVM的开发的路由和服务器端负载均衡器。\n"),a("img",{attrs:{src:"https://github.com/cainiao-wu/picture/raw/master/Spring%20cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA/zuul-1.png",alt:"image"}})]),s._v(" "),a("blockquote",[a("p",[s._v("Zuul 可以做什么？")])]),s._v(" "),a("ul",[a("li",[s._v("身份认证")]),s._v(" "),a("li",[s._v("审查与监控")]),s._v(" "),a("li",[s._v("压力测试")]),s._v(" "),a("li",[s._v("金丝雀测试")]),s._v(" "),a("li",[s._v("动态路由")]),s._v(" "),a("li",[s._v("服务迁移")]),s._v(" "),a("li",[s._v("负载分配")]),s._v(" "),a("li",[s._v("安全")]),s._v(" "),a("li",[s._v("静态响应处理")]),s._v(" "),a("li",[s._v("主动/主动流量管理")])]),s._v(" "),a("h3",{attrs:{id:"服务网关api-gateway中pom-xml依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务网关api-gateway中pom-xml依赖"}},[s._v("#")]),s._v(" 服务网关"),a("code",[s._v("api-gateway")]),s._v("中"),a("code",[s._v("pom.xml")]),s._v("依赖")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<dependency>\n\t<groupId>io.jsonwebtoken</groupId>\n\t<artifactId>jjwt</artifactId>\n\t<version>0.7.0</version>\n</dependency>\n<dependency>\n\t<groupId>org.apache.commons</groupId>\n\t<artifactId>commons-collections4</artifactId>\n\t<version>4.1</version>\n</dependency>\n\n<dependency>\n\t<groupId>com.alibaba</groupId>\n\t<artifactId>fastjson</artifactId>\n\t<version>1.2.36</version>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.cloud</groupId>\n\t<artifactId>spring-cloud-starter-config</artifactId>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.cloud</groupId>\n\t<artifactId>spring-cloud-starter-eureka</artifactId>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.cloud</groupId>\n\t<artifactId>spring-cloud-starter-zuul</artifactId>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-web</artifactId>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.cloud</groupId>\n\t<artifactId>spring-cloud-starter-feign</artifactId>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-test</artifactId>\n\t<scope>test</scope>\n</dependency>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br")])]),a("h3",{attrs:{id:"开启zuul代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启zuul代理"}},[s._v("#")]),s._v(" 开启Zuul代理")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("@SpringBootApplication\n@EnableEurekaClient\n@EnableZuulProxy\n@EnableFeignClients\npublic class ApiGatewayApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ApiGatewayApplication.class, args);\n\t}\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"config-server-git上api-gateway服务配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config-server-git上api-gateway服务配置"}},[s._v("#")]),s._v(" config-server git上api-gateway服务配置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server:\n  port: ${PORT:8080}\n#  connection-timeout: 3600000\n#  session:\n#    timeout: 1800\nzuul:\n#  max:\n#    host:\n#      connections: 500\n#  host:\n#    socket-timeout-millis: 60000\n#    connect-timeout-millis: 60000\n  routes:\n    spring-test-service:\n      path: /api/test/**\n      serviceId: spring-test-service\nlogging:\n  level:\n    com.netflix: DEBUG\n    com.hand: DEBUG\nhand:\n  security:\n    token:\n      expiration-time: 10 # 分钟 1440\n      refresh-exp-time: 30 # 分钟 2880\n      issuer: springstudy\n      signing-key: hand\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h3",{attrs:{id:"自定义过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义过滤器"}},[s._v("#")]),s._v(" - 自定义过滤器")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Component\npublic class GatewayZuulFilter extends ZuulFilter {\n\n    /**\n     * per：路由之前\n     * routing：路由时\n     * post：路由后\n     * error：错误时调用\n     */\n    @Override\n    public String filterType() {\n        return "pre";\n    }\n\n    /**\n     * 过滤器顺序，类似@Filter中的order\n     */\n    @Override\n    public int filterOrder() {\n        return 0;\n    }\n\n    /**\n     * 这里可以写逻辑判断，是否要过滤，本文true,永远过滤。\n     */\n    @Override\n    public boolean shouldFilter() {\n        return true;\n    }\n\n    /**\n     * 过滤器的具体逻辑。可用很复杂，包括查sql，nosql去判断该请求到底有没有权限访问。这里是验证token是否存在\n     */\n    @Override\n    public Object run() {\n        RequestContext ctx = RequestContext.getCurrentContext();\n        HttpServletRequest request = ctx.getRequest();\n        String tokenPayload = request.getHeader(WebSecurityConfig.TOKEN_HEADER_PARAM);\n        if(tokenPayload == null) {\n            ctx.setSendZuulResponse(false);\n            ctx.setResponseStatusCode(404);\n            ctx.setResponseBody("X-Authorization cannot be empty");\n        }\n        return null;\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br")])]),a("h3",{attrs:{id:"身份验证（jwt）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#身份验证（jwt）"}},[s._v("#")]),s._v(" 身份验证（JWT）")]),s._v(" "),a("blockquote",[a("p",[s._v("详细内容见文档《"),a("strong",[s._v("Spring Cloud微服务架构中身份验证 JSON Web Tokens( JWT")]),s._v(")》")])]),s._v(" "),a("p",[s._v("部分逻辑：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public static final String TOKEN_HEADER_PARAM = "X-Authorization";\npublic static final String FORM_BASED_LOGIN_ENTRY_POINT = "/api/auth/login";\npublic static final String TOKEN_BASED_AUTH_ENTRY_POINT = "/api/**";\npublic static final String MANAGE_TOKEN_BASED_AUTH_ENTRY_POINT = "/manage/**";\npublic static final String TOKEN_REFRESH_ENTRY_POINT = "/api/auth/token";\n\n....\n\n@Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n        .csrf().disable() // 因为使用的是JWT，因此这里可以关闭csrf了\n        .exceptionHandling()\n        .authenticationEntryPoint(this.authenticationEntryPoint)\n        .and()\n            .sessionManagement()\n            .sessionCreationPolicy(SessionCreationPolicy.STATELESS)\n        .and()\n            .authorizeRequests()\n                .antMatchers(FORM_BASED_LOGIN_ENTRY_POINT).permitAll() // Login end-point\n                .antMatchers(TOKEN_REFRESH_ENTRY_POINT).permitAll() // Token refresh end-point\n        .and()\n            .authorizeRequests()\n                .antMatchers(TOKEN_BASED_AUTH_ENTRY_POINT).authenticated() // Protected API End-points\n                .antMatchers(MANAGE_TOKEN_BASED_AUTH_ENTRY_POINT).hasAnyRole(RoleEnum.ADMIN.name())\n        .and()\n            .addFilterBefore(buildLoginProcessingFilter(), UsernamePasswordAuthenticationFilter.class)\n            .addFilterBefore(buildTokenAuthenticationProcessingFilter(), UsernamePasswordAuthenticationFilter.class);\n    }\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("ol",[a("li",[a("code",[s._v('"/api/auth/login"')]),s._v(" 登陆校验用户信息，获取tokens")]),s._v(" "),a("li",[a("code",[s._v('"/api/**"')]),s._v(" 拦截带有"),a("code",[s._v("/api/")]),s._v("的url，校验tokens信息")]),s._v(" "),a("li",[a("code",[s._v('"/manage/**"')]),s._v(" 同样拦截校验tokens，并且只有管理员角色的用户才能访问改url")]),s._v(" "),a("li",[a("code",[s._v('"/api/auth/token"')]),s._v("  校验token并刷新新的token")])]),s._v(" "),a("h3",{attrs:{id:"feign调用spring-test-service-服务校验用户信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#feign调用spring-test-service-服务校验用户信息"}},[s._v("#")]),s._v(" feign调用spring-test-service 服务校验用户信息")]),s._v(" "),a("h4",{attrs:{id:"feign简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#feign简介"}},[s._v("#")]),s._v(" - Feign简介")]),s._v(" "),a("p",[s._v("Feign是一个声明式的Web服务客户端。这使得Web服务客户端的写入更加方便 。它具有可插拔注释支持，包括Feign注释和JAX-RS注释。Feign还支持可插拔编码器和解码器。Spring Cloud增加了对Spring MVC注释的支持，并HttpMessageConverters在Spring Web中使用了默认使用的相同方式。Spring Cloud集成了Ribbon和Eureka，在使用Feign时提供负载平衡的http客户端。")]),s._v(" "),a("h4",{attrs:{id:"pom-xml-依赖添加如上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml-依赖添加如上"}},[s._v("#")]),s._v(" pom.xml 依赖添加如上")]),s._v(" "),a("h4",{attrs:{id:"服务调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务调用"}},[s._v("#")]),s._v(" 服务调用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@FeignClient(value = "spring-test-service")\npublic interface UserInfoService {\n    @RequestMapping(value = "/user/validate", method = RequestMethod.POST)\n    UserInfo validate(@RequestParam("username") String username, @RequestParam("password") String password);\n\n    @RequestMapping(value = "/user/findByName", method = RequestMethod.POST)\n    UserInfo findByName(@RequestParam("username") String username);\n    }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("code",[s._v('@FeignClient(value = "spring-test-service")')]),s._v(" 指定调用的服务，"),a("code",[s._v('@RequestMapping(value = "/user/findByName", method = RequestMethod.POST)')]),s._v("对应spring-test-service服务controller层：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@RestController\n@RequestMapping("user")\npublic class UserController {\n\n    @Autowired\n    private IUserService service;\n\n    @RequestMapping(value = "/validate", method = RequestMethod.POST)\n    public @ResponseBody UserInfo validate(@RequestParam String username,@RequestParam String password){\n        return service.validate(username,password);\n    }\n\n    @RequestMapping(value = "/findByName", method = RequestMethod.POST)\n    public @ResponseBody UserInfo findByName(@RequestParam String username){\n        return service.findByName(username);\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("注意 Application启动类加上"),a("code",[s._v("@EnableFeignClients")]),s._v(" 开启feign调用")]),s._v(" "),a("h2",{attrs:{id:"rabbitmq-消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-消息队列"}},[s._v("#")]),s._v(" RabbitMQ 消息队列")]),s._v(" "),a("h3",{attrs:{id:"消息中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息中间件"}},[s._v("#")]),s._v(" 消息中间件")]),s._v(" "),a("p",[s._v("RabbitMQ 是消息中间件的一种, 消息中间件即分布式系统中完成消息的发送和接收的基础软件. 这些软件有很多, 包括 ActiveMQ ( apache 公司的), RocketMQ (阿里巴巴公司的, 现已经转让给 apache), 还有性能极高的 Kafka。")]),s._v(" "),a("p",[s._v("消息中间件的工作过程可以用生产者消费者模型来表示. 即生产者不断的向消息队列发送信息, 而消费者从消息队列中消费信息. 具体过程如下:")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/cainiao-wu/picture/raw/master/Spring%20cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA/006tNc79ly1fnuk4o5optj30pz07xdg7.jpg",alt:"image"}})]),s._v(" "),a("p",[s._v("从上图可看出, 对于消息队列来说, 生产者,消息队列,消费者 是最重要的三个概念。生产者发消息到消息队列中去, 消费者监听指定的消息队列, 并且当消息队列收到消息之后, 接收消息队列传来的消息, 并且给予相应的处理. 消息队列常用于分布式系统之间互相信息的传递.")]),s._v(" "),a("h3",{attrs:{id:"rabbitmq-工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-工作原理"}},[s._v("#")]),s._v(" RabbitMQ 工作原理")]),s._v(" "),a("p",[s._v("对于 RabbitMQ 来说, 除了这三个基本模块以外, 还添加了一个模块, 即交换机(Exchange). 它使得生产者和消息队列之间产生了隔离, 生产者将消息发送给交换机,而交换机则根据调度策略把相应的消息转发给对应的消息队列. 那么 RabitMQ 的工作流程如下所示:\n"),a("img",{attrs:{src:"https://github.com/cainiao-wu/picture/raw/master/Spring%20cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA/006tNc79ly1fnuk4ohjbmj30dd08zjrw.jpg",alt:"image"}})]),s._v(" "),a("p",[s._v("说一下交换机: 交换机的主要作用是接收相应的消息并且绑定到指定的队列. 交换机有四种类型, 分别为Direct, topic, headers, Fanout.")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Direct 是 RabbitMQ 默认的交换机模式,也是最简单的模式.即创建消息队列的时候,指定一个 BindingKey. 当发送者发送消息的时候, 指定对应的 Key. 当 Key 和消息队列的 BindingKey 一致的时候,消息将会被发送到该消息队列中.")])]),s._v(" "),a("li",[a("p",[s._v("topic 转发信息主要是依据通配符, 队列和交换机的绑定主要是依据一种模式(通配符+字符串), 而当发送消息的时候, 只有指定的 Key 和该模式相匹配的时候, 消息才会被发送到该消息队列中.")])]),s._v(" "),a("li",[a("p",[s._v("headers 也是根据一个规则进行匹配, 在消息队列和交换机绑定的时候会指定一组键值对规则, 而发送消息的时候也会指定一组键值对规则, 当两组键值对规则相匹配的时候, 消息会被发送到匹配的消息队列中.")])]),s._v(" "),a("li",[a("p",[s._v("Fanout 是路由广播的形式, 将会把消息发给绑定它的全部队列, 即便设置了 key, 也会被忽略.")])])]),s._v(" "),a("h3",{attrs:{id:"rabbitmq安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq安装"}},[s._v("#")]),s._v(" RabbitMQ安装")]),s._v(" "),a("blockquote",[a("p",[s._v("https://www.cnblogs.com/ericli-ericli/p/5902270.html")])]),s._v(" "),a("p",[s._v("==唯一需要注意的是windows下安装window用户名不能出现中文，为此window重装了n次==")]),s._v(" "),a("p",[s._v("进入rabbitMQ安装目录，后进入sbin目录,")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("使用rabbitmq-plugins.bat list查看已安装的插件列表")])]),s._v(" "),a("li",[a("p",[s._v("接下来使用 rabbitmq-plugins.bat enable rabbitmq_management 命令开启网页版控制台。")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/cainiao-wu/picture/raw/master/Spring%20cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA/TIM%E5%9B%BE%E7%89%8720180202175923.png",alt:"image"}})]),s._v(" "),a("h3",{attrs:{id:"依赖导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖导入"}},[s._v("#")]),s._v(" 依赖导入")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<dependency>\n\t<groupId>org.springframework.cloud</groupId>\n\t<artifactId>spring-cloud-starter-bus-amqp</artifactId>\n</dependency>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"direct模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#direct模式"}},[s._v("#")]),s._v(" Direct模式")]),s._v(" "),a("p",[s._v("消息发送类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Component\npublic class RabbitMQDirectClient {\n    @Autowired\n    private AmqpTemplate rabbitTemplate;\n\n    public void send(String message){\n        this.rabbitTemplate.convertAndSend("hand",message);\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("消息接受类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Component\n@RabbitListener(queues = "hand") //监听队列\npublic class RabbitMQDirectServer {\n    @RabbitHandler  //处理接受到的信息\n    public void receive(String message){\n        System.out.println("收到的message信息是："+message);\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("应用主类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\n@Autowired\nprivate RabbitMQDirectClient rabbitMQDirectClient;\n\n@Bean\npublic Queue testQueue() {\n    return new Queue("hand");\n}\n@PostConstruct  //\npublic void init() {\n    StopWatch stopWatch = new StopWatch();\n    stopWatch.start();\n    for (int i = 0; i < 100; i++) {\n        String context = "hello " + new Date();\n        System.out.println("Sender : " + context);\n//            rabbitMQDirectClient.send("时间消息 ："+context);\n        rabbitMQDirectClient.send("时间消息 ："+context);\n    }\n    stopWatch.stop();\n    System.out.println("发送消息耗时：" + stopWatch.getTotalTimeMillis());\n}\n\npublic static void main(String[] args) {\n    SpringApplication.run(SpringCloudRabbitmqApplication.class, args);\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("@PostConstruct说明")]),s._v(" "),a("blockquote",[a("p",[s._v("被@PostConstruct修饰的方法会在服务器加载Servlet的时候运行，并且只会被服务器调用一次，类似于Serclet的inti()方法。被@PostConstruct修饰的方法会在构造函数之后，init()方法之前运行。")])]),s._v(" "),a("h3",{attrs:{id:"topic-模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#topic-模式"}},[s._v("#")]),s._v(" topic 模式")]),s._v(" "),a("p",[s._v("消息发送类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Component\npublic class RabbitMQTopicClient {\n    @Autowired\n    private AmqpTemplate rabbitTemplate;\n\n    @Autowired\n    private TopicExchange exchange;\n\n    public void send(String message){\n        this.rabbitTemplate.convertAndSend(exchange.getName(),"test",message);\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("消息接受类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Component\n@RabbitListener(queues = "hand-Queue")\npublic class RabbitMQTopicServer {\n    @RabbitHandler\n    public void receive(String message){\n        System.out.println("收到的message信息是："+message);\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("应用主类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Bean\npublic Queue testQueue() {\n    return new Queue("hand-Queue");\n}\n\n@Bean\npublic TopicExchange exchange(){\n    return new TopicExchange("hand-TopicExchange");\n}\n\n@Bean\npublic Binding binging(Queue queue,TopicExchange exchange){\n    return BindingBuilder.bind(queue).to(exchange).with("test");\n}\n\n@Autowired\npublic RabbitMQTopicClient rabbitMQTopicClient;\n@PostConstruct\npublic void init() {\n    StopWatch stopWatch = new StopWatch();\n    stopWatch.start();\n    for (int i = 0; i < 100; i++) {\n        String context = "hello " + new Date();\n        System.out.println("Sender : " + context);\n//            rabbitMQDirectClient.send("时间消息 ："+context);\n        rabbitMQTopicClient.send("时间消息 ："+context);\n    }\n    stopWatch.stop();\n    System.out.println("发送消息耗时：" + stopWatch.getTotalTimeMillis());\n}\n\npublic static void main(String[] args) {\n    SpringApplication.run(SpringCloudRabbitmqApplication.class, args);\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);